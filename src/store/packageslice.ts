// ğŸ“„ src/store/packageslice.ts

import { createSlice, PayloadAction } from "@reduxjs/toolkit";

// Paket Ã–zelliÄŸi tipi
export interface PackageFeature {
  id: string;
  name: string;
  isActive: boolean;
}

// Paket State
interface PackageState {
  packageName: string;
  features: PackageFeature[];
}

// Ä°lk DeÄŸer
const initialState: PackageState = {
  packageName: "", // ğŸš© artÄ±k backend'den gelecek
  features: [], // ğŸš© backend'den doldurulacak
};

// Slice
export const packageSlice = createSlice({
  name: "packages",
  initialState,
  reducers: {
    // Paket ve Ã¶zelliklerini set et
    setPackage: (
      state,
      action: PayloadAction<{ packageName: string; features: PackageFeature[] }>
    ) => {
      state.packageName = action.payload.packageName;
      state.features = action.payload.features;
    },

    // Ã–zelliÄŸi aktif/pasif yap
    toggleFeature: (state, action: PayloadAction<string>) => {
      const feature = state.features.find((f) => f.id === action.payload);
      if (feature) feature.isActive = !feature.isActive;
    },

    // TÃ¼m paket bilgilerini sÄ±fÄ±rla (Ã¶rn: logout sonrasÄ±)
    resetPackage: (state) => {
      state.packageName = "";
      state.features = [];
    },
  },
});

// Actions
export const { setPackage, toggleFeature, resetPackage } = packageSlice.actions;

// Reducer
export default packageSlice.reducer;
